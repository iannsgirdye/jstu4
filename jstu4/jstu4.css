/**
  Нормализация блочной модели
 */
*,
::before,
::after {
  box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure, fieldset):where([class]) {
  margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  p,
  ul,
  ol,
  dl
):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  padding: 0;
  border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
  --paragraphMarginBottom: 24px;

  margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}


/**
  Упрощаем работу с изображениями и видео
 */
img,
video {
  display: block;
  max-width: 100%;
  height: auto;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  height: 100%;
  /**
    Убираем скачок интерфейса по горизонтали
    при появлении / исчезновении скроллбара
   */
  scrollbar-gutter: stable;
}

/**
  Плавный скролл
 */
html {
  scroll-behavior: smooth;
}

body {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  min-height: 100%;
  /**
    Унифицированный интерлиньяж
   */
  line-height: 1.5;
}

/**
  Нормализация высоты элемента ссылки при его инспектировании в DevTools
 */
a:where([class]) {
  display: inline-flex;
}

/**
  Курсор-рука при наведении на элемент
 */
button,
label {
  cursor: pointer;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут fill со значением 'none' или начинается с 'url')
 */
:where([fill]:not(
  [fill="none"],
  [fill^="url"]
)) {
  fill: currentColor;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут stroke со значением 'none')
 */
:where([stroke]:not(
  [stroke="none"],
  [stroke^="url"]
)) {
  stroke: currentColor;
}

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
  transition-property: fill, stroke;
}

/**
  Приведение рамок таблиц в классический 'collapse' вид
 */
:where(table) {
  border-collapse: collapse;
  border-color: currentColor;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

:root {
  --color-white: #ffffff;
  --color-ligth-gray: #eeeeee;
  --color-gray: #dddddd;
  --color-dark-gray: #666666;
  --color-light-black: #333333;
  --color-black: #000000;
  --color-light-red: #ffcccc;
  --color-red: #aa0000;
  --color-light-green: #99ff77;
  --color-green: #00aa00;
  --color-dark-green: #009900;
  --color-orange: #bb6600;
}

html {
  font-family: Arial, sans-serif;
  font-style: normal;
  font-weight: 400;
  font-display: swap;
}

body {
  height: 100vh;
  max-width: 800px;
  margin: 0 auto;
  padding-block: 12px;
  background-color: var(--color-white);
  display: flex;
  flex-direction: column;
  row-gap: 24px;
}

main {
  min-height: 0;
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  row-gap: 24px;
}

.button {
  padding: 0.25em 0.5em;
  border: 1px solid var(--color-dark-gray);
  border-radius: 0.5em;
  background-color: var(--color-gray);
  text-decoration: none;
  color: var(--color-dark-gray);
  font-size: 14px;
  font-weight: 700;
  text-wrap: nowrap;
  transition-duration: 0.2s;
}

.button:hover {
  background-color: var(--color-ligth-gray);
}

.button:active {
  transform: scale(0.95);
}

.buttons {
  display: flex;
  justify-content: center;
  align-items: center;
  column-gap: 12px;
}

.input-wrapper {
  width: 100%;
  padding: 0.2em;
  border: 1px solid var(--color-dark-gray);
  border-radius: 0.5em;
  background-color: var(--color-ligth-gray);
}

.input {
  font-family: monospace;
  font-size: 14px;
  background-color: inherit;
  border: 0;
  width: 100%;
  padding: 0.3em;
  line-height: 1.2;
  overflow-y: auto;
  overflow-x: hidden;
}

textarea.input {
  resize: none;
}

.input:focus {
  outline: none;
}

.header {
  display: flex;
  justify-content: center;
  column-gap: 24px;
}

.header__title {
  font-weight: normal;
  font-size: 24px;
}

.code {
  flex-grow: 1;
  min-height: 0;
  display: flex;
  flex-direction: column;
  row-gap: 6px;
}

.code__controls {
  display: flex;
  justify-content: space-between;
  align-items: center;
  column-gap: 32px;
}

.code__controls-log.error {
  color: var(--color-red);
}

.code__controls-log.info {
  color: var(--color-green);
}

.code__controls-log.warning {
  color: var(--color-orange);
}

.code__stats {
  font-family: monospace;
  color: var(--color-dark-gray);
  text-align: center;
}

.code__stats b {
  color: var(--color-light-black);
}

.code__input-wrapper {
  min-height: 0;
  flex-grow: 1;
  height: 100%;
}

.code__input,
.code__result {
  height: 100%;
  width: 100%;
}

.code__result {
  color: #999;
}

.code__result span {
  color: var(--color-black);
}

.line__result .current,
.code__result .current {
  padding: 1px;
  margin: -1px;
  background-color: var(--color-light-green);
  color: var(--color-black) !important;
}

.code__result .visited {
  color: var(--color-dark-green);
}

.line__result .error,
.code__result .error {
  padding: 1px;
  margin: -1px;
  background-color: var(--color-light-red);
}
